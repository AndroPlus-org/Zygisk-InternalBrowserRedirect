apply plugin: 'com.android.application'

ext {
    moduleId = "riru_ibr"
    riruModuleId = "ibr"

    moduleRiruApiVersion = 10
    versionCode = 1
    versionName = "1.0"
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://dl.bintray.com/rikkaw/Libraries' }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 30
        versionCode versionCode
        versionName versionName

        externalNativeBuild {
            cmake {
                abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
                arguments "-DMODULE_NAME:STRING=$moduleId",
                        "-DRIRU_MODULE_API_VERSION=$moduleRiruApiVersion",
                        "-DRIRU_MODULE_VERSION=$versionCode",
                        "-DRIRU_MODULE_VERSION_NAME:STRING=\"$versionName\""
            }
        }
    }

    buildFeatures {
        prefab true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation 'rikka.ndk:riru:10'
    implementation project(":shared")
    compileOnly project(":hideapi")
}

task createRemoteJar(type: Jar) {
    from zipTree("$buildDir/outputs/apk/release/remote-release-unsigned.apk")
    include "classes.dex"

    destinationDirectory = file("$buildDir/outputs")
    archiveFileName = "boot-internal-browser-redirect.jar"
}

task extractRemoteLibrary(type: Copy) {
    from zipTree("$buildDir/outputs/apk/release/remote-release-unsigned.apk")
    include "lib/**"
    into "$buildDir/outputs/remote-library/"

    eachFile {
        path = path.replaceAll("^lib/", "")
    }
}

afterEvaluate {
    createRemoteJar.dependsOn assembleRelease
    extractRemoteLibrary.dependsOn assembleRelease
}
